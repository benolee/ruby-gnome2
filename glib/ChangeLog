2002-08-08  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobj_type.c: more ruby-ish method naming.
	ie: "hoge?" rather than "is_hoge"?
	* src/rbgobj_type.c (rbgobj_lookup_class_by_gtype): enhancement for
	G_TYPE_PARAM
	* src/rbgobj_param.c, src/rbgobj_paramspec.c: rewrite for using above
	enhancement.

2002-08-07  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobject.c (rbgobj_gobject_new): take type argument as GType
	 instead of VALUE.
	* src/rbgobject.c (rbgobj_gobject_new): allow nil for construct parameter
	* src/rbgobj_object.c (is_gtkobject): add function
	* src/rbgobj_object.c (GObject.allocate): check abstract class
	* src/rbgobj_object.c (GObject#initialize): rewrite
	* src/rbgobj_type.c (rbgobj_lookup_class): use independent hash instead
	of instance variable. and abolish id_class_info.
	* src/rbgobj_type.c (rbgobj_lookup_class): search ancestor classes.
	* src/rbgobj_type.c: implement GLib::Type.

2002-08-06  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobj_type.c: extend rbgobj_lookup_class_by_gtype() to deal
	interfaces
	* src/rbgobject.h: define macros: G_DEF_INTERFACE and G_DEF_INTERFACE2
	* src/rbgobj_typeplugin.c: file added
	* extconf.rb: use --msvc-syntax option for pkg-config if the compiler
	is MSVC++.

2002-08-06  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>
 
	* src/rbgobject.h: remove declaration of id_class_info and id_delete
	* src/rbgobject.h, src/rbgobj_object.c, src/rbgobj_signal.c:
	remove global variable rbgobj_cGObject.

2002-08-03  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbglib.[ch]: fix mGLib declaration and definition

2002-08-02  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobj_type.c (rbgobj_lookup_class_by_gtype):
	enable calling of rbgobj_define_property_accessors() and
	rbgobj_define_signal_constants().

2002-08-02  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobj_type.c: abolish rbgobj_register_class()
	* src/rbgobj_type.c (rbgobj_lookup_class_by_gtype):
	now this function create a new class on demand.
	* src/rbgobj_type.c: abolish rbgobj_lookup_rbclass()
	* src/rbgobject.c: fix typo
	* src/rbgobject.c: add rbgobj_define_signal_constants()
	which define constants for signal names.

2002-08-01  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobj_object.c (_gobject_to_ruby): check NULL before calling
	GOBJ2RVAL().
	* src/rbgobj_signal.c (gobj_sig_connect): remove unused variable 'id'.
	* src/rbgobj_signal.c (gobj_sig_connect_after): ditto
	* src/rbgobj_object.c (gobj_smethod_added): fix bugs
	
2002-07-31  Masao Mutoh  <mutoh@highway.ne.jp>

	* src/rbgobject.c: devide from rbgobj_objectc[ch].
	* src/rbgobj_object.c, src/rbgobject.h: abolish rbgobj_force_get_gobject().
	* src/rbgobject.h: add G_DEF_CLASS(), G_DEF_CLASS2(), GTYPE2CLASS().
	* src/rbgobj_type.c: add rbgobj_define_class()

2002-07-31  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobj_closure.c: use g_closure_add_invalidate_notifier()
	instead of g_closure_add_finalize_notifier()
	* src/rbgobj_closure.c: fix g_closure_add_invalidate_notifier()'s
	argument order
	* src/rbgobj_signal.c: GObject#signal_connect now accept extra argument
	as Ruby/Gtk 1.
	* src/rbgobj_signal.c: implement GObject#signal_connect_after

2002-07-28  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobj_object.c (gobj_s_gobject_new): refine GtkObject-specific
	stuff
	* src/rbgobj_object.c: implement GObject#freeze_notify, GObject#notify,
	GObject#thaw_notify
	* src/rbgobj_object.c (gobj_inspect): use g_strdup_printf() instead of
	ALLOCA_N() and sprintf()
	* src/rbgobj_type.c (rbgobj_register_class): add some check
	* src/*.c: replace rbgobj_get_value_from_gobject() with GOBJ2RVAL()
	* src/*.c: replace rbgobj_get_gobject() with RVAL2GOBJ()
	* src/rbgobj_object.c:
	  void rbgobj_define_property_acccessors(VALUE klass);
	is added. This function defines accessor methods for properties.
	* src/rbgobj_signal.c (gobj_sig_emit): call g_value_init()

2002-07-27  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobj_object.c: abolish rbgobj_make_gobject_auto_type() and
	rbgobj_make_gobject()
	* src/rbgobj_boxed.c, src/rbgobj_enums.c, src/rbgobj_typemodule.c,
	src/rbgobj_signal.c: created
	* src/rbgobj_object.c: move signal stuff to src/rbgobj_signal.c

2002-07-27  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* src/rbgobj_object.c: implement GObject.gobject_new experimentaly.
	  example:
	   w = GLib::GObject.gobject_new("GtkWindow", "title" => "Hello World")

2002-07-26  Masahiro Sakai  <sakai@tom.sfc.keio.ac.jp>

	* extconf.rb: check allocation framework
	* src/rbgobj_object.c: introduce intermediate data structure (gobj_holder)
	for managing not only GObject*, but also class_info and ruby object itself.
	* src/rbgobj_object.c: abolish gobject_object_list_v and 
	gobject_object_list
	* src/rbgobj_object.c: use gobject_weak_ref() to observe an explicit
	disposition. (e.g. by gtk_object_destroy())
	* src/rbgobj_object.c: implement GObject#set_property and
	GObject#get_property
	* src/rbgobj_paramspecs.c: created

2002-06-23  Masahiro Sakai  <s01397ms@sfc.keio.ac.jp>

	* src/rbgobj_type.c (Init_gobject_gtype): call g_type_init().
	* src/rbgobj_object.c, src/gclosure.c: zero-fill GValue before
	using it.

2002-06-23  Masao Mutoh <mutoh@highway.ne.jp>

	* src/rbgobject.h: Fix parameter number of RBGOBJ_INITIALIZE().

2002-06-23  Masao Mutoh <mutoh@highway.ne.jp>

	* src/rbgobject.c: change rbgobj_set_gobject() to rbgobj_initialize_gobject().
	* src/rbgobject.h: create RBGOBJ_INITIALIZE().

2002-06-22  Masahiro Sakai  <s01397ms@sfc.keio.ac.jp>

	* src/rbgobject.h: create two macros; RVAL2GOBJ() and GOBJ2RVAL().
	* src/rbgobject.h, rbgobj_object.c: make rbgobj_make_gobject() and
	rbgobj_make_gobject_auto_type() be private.
	* src/rbgobj_object.c: remove gobj_mark() and clear_gobject().
	* src/rbglib.c: remove gError.

2002-06-20  Masahiro Sakai  <s01397ms@sfc.keio.ac.jp>

	* src/rbgobj_object.c, src/rbgobj_type.c, src/rbgobject.h:
	rename rbgobj_class_info to RGObjClassInfo.

2002-06-18  Masahiro Sakai  <s01397ms@sfc.keio.ac.jp>

	* src/*.c: conform to Ruby/GNOME2 coding-style.

2002-06-18  Masahiro Sakai  <s01397ms@sfc.keio.ac.jp>

	* extconf.rb: check whether package exists or not.
